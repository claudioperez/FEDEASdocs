FEDEASLab:
  Basic:
    - A = A_matrix (Model)
    - B = B_matrix (Model)
    - \[Bbari,Bbarx,ind_x] = BbariBbarx_matrix (Bf,ind_r)
    - \[L,dcx] = ElmLenOr (xyz)
    - Fs = Fs_matrix (Model,ElemData,Roption)
    - Ks = Ks_matrix (Model,ElemData)
    - \[xyz,id] = Localize (Model,el)
    - \[lamdac,Qc] = PlasticAnalysis_wLBT (Bf,Qpl,Pref,Pcf,Options)
    - \[lamdac,DUf,DVhp] = PlasticAnalysis_wUBT (Af,Qpl,Pref,Pfc,Options)
    - Q0 = Q0_vector (Model,ElemData)
    - V0 = V0_vector (Model,ElemData,Roption)
  Dynamics:
    - \[u,udot] = AccelerationIntegral (uddot,Deltat,nstep,u0,udot0)
    - \[omega,Ueig] = EigenMode (Kf,M,nmod)
    - \[D,Psv,Psa] = ElasticResponseSpectrum (Acceleration,T,zeta)
    - \[u,udot,uddot,pr] = InelSDOF_Newmark (Deltat,omega,p,InelSDFData,zeta,u0,udot0)
    - \[u,udot,uddot] = LSDOF_LinearWilson (Deltat,omega,p,zeta,u0,udot0)
    - \[u,udot,uddot] = LSDOF_Newmark (Deltat,omega,p,zeta,u0,udot0)
    - \[omega,Ueig,Y_t,Ydot_t,Yddot_t] = ModalAnalysis (option,Kf,M,Loading,Deltat,zeta,nmod)
    - \[Mmod,Ymod,Vmod] = ModeDecomposition (M,Ueig,V)
  Element_Library:
    - y = Check3dFrmAxes (el,y,xyz)
    - \[L,T] = DefGeom_2dFrm (xyz)
    - \[L,T] = DefGeom_3dFrm (xyz,GeomData,u)
    - \[XYd,xyd] = DeformShape2dFrm (xyz,ElemData,u,v,MAGF,nsub)
    - \[XYd,xyd] = DeformShape2dFrm_wCurvIntp (xyz,ElemData,u,EPost,MAGF,nsub)
    - \[XYd,xyd] = DeformShape2dFrm_wDispIntp (xyz,ElemData,u,v,MAGF,nsub)
    - ElemResp = Dinel2dFrm_EBwDF (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = Dinel2dFrm_EBwFF (action,el_no,xyz,ElemData,ElemState)
    - wC = ElementLoading (w0,lamda,LdId)
    - \[u,Du,DDu] = ExtrReshu (State,ndf,nen)
    - SecState = Extract_BasicEl2SecState (sec,ae,ElState)
    - MatState = Extract_El2MatState (mat,aeps,ElState,rd)
    - SecState = Extract_El2SecState (sec,ae,ElemState)
    - \[f,g,h] = GPYS (GPYSC,xyz,ScVec)
    - \[ag,bg,ab,v,Dv,DDv] = GeomTran_2dFrm (option,xyz,GeomData,u,Du,DDu)
    - \[ag,bg,ab,v,Dv,DDv] = GeomTran_3dFrm (option,xyz,GeomData,u,Du,DDu)
    - \[ag,bg,v,Dv,DDv] = GeomTran_Truss (option,xyz,u,Du,DDu)
    - ElemResp = Inel2dFrm_wLHNMYS (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = Inel2dFrm_wLPPM (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = Inel2dFrm_wOneComp (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = Inel2dFrm_wTwoComp (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = InelTruss (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = LE2dFrm (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = LE2dFrm_wPdelta (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = LE3dFrm (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = LETruss (action,el_no,xyz,ElemData,ElemState)
    - v = Large2du2v_Frm (xyz,u)
    - \[v,vthetaI,vthetaJ] = Large3du2v_Frm (xyz,GeomData,u)
    - ElemResp = MaterialWrapper (action,el_no,xyz,ElemData,ElemState)
    - ElemResp = SectionWrapper (action,el_no,xyz,ElemData,ElemState)
    - aj = TranJnt (jntoff)
    - kg = kg_2dFrm (option,xyz,u,q)
    - kg = kg_3dFrm (option,xyz,GeomData,u,q,ElLoad)
    - kg = kg_Truss (option,xyz,u,q)
  General:
    - State = Add_Damping2State (type,Model,State,zeta,mode)
    - Model = Add_Mass2Model (Model,Me,ElemData,option)
    - Aj = Aj_matrix (Model)
    - C = Create_Damping (type,Kf,Ml,zeta,mode)
    - Loading = Create_Loading (Model,Pe,Ue)
    - Model = Create_Model (XYZ,CON,BOUN,ElemName)
    - Pref = Create_NodalForces (Model,Pe)
    - Ml = Create_NodalMass (Model,Me)
    - Pw = Create_PwForces (Model,ElemData)
    - Model = Create_SimpleModel (XYZ,CON,BOUN,ElemName)
    - ElemState = Extract_Str2ElState (el,id,State)
    - Resp = Structure (action,Model,ElemData,State,ElemList)
    - ElemState = SubIncr4ElemntSD (el,ElemName,xyz,ElemData,ElemState)
  Material_Library:
    - MatResp = BilinElastic1dMat (action,MatNo,MatData,MatState)
    - MatResp = BilinHyst1dMat (action,MatNo,MatData,MatState)
    - MatResp = BilinInel1dMat (action,MatNo,MatData,MatState)
    - MatResp = BilinOrOr1dMat (action,MatNo,MatData,MatState)
    - MatResp = BilinPkOr1dMat (action,MatNo,MatData,MatState)
    - MatResp = GMP1dMat (action,MatNo,MatData,MatState)
    - MatResp = InelJ2PwLH3dMat (action,MatNo,MatData,MatState)
    - MatResp = InelLPwLH1dMat (action,MatNo,MatData,MatState)
    - MatResp = ManderConcr1dMat (action,MatNo,MatData,MatState)
  Section_Library:
    - MatState = Extract_Sec2MatState (m,as,SecState)
    - SecResp = HomoCircSecw1dMat (action,SecNo,ndm,SecData,SecState)
    - SecResp = HomoRectSecw1dMat (action,SecNo,ndm,SecData,SecState)
    - SecResp = HomoWFSecw1dMat (action,SecNo,ndm,SecData,SecState)
    - SecResp = MultRectSecw1dMat (action,SecNo,ndm,SecData,SecState)
    - SecResp = ReCircSecw1dMat (action,SecNo,ndm,SecData,SecState)
    - SecResp = ReRectSecw1dMat (action,SecNo,ndm,SecData,SecState)
  Solution_Library:
    - \[Kfc,Pfc] = Condense_MV (Kf,idr,Pf)
    - LimitSurf = Create_PlastLimSurface (ElemName,ElemData)
    - \[lamdah,Qh,Ufh,Vph,Iph] = Event2Event_NLAnalysis (opt,Model,ElemData,Loading,ConvPar)
    - \[State,SolStrat] = Increment(Model,ElemData,Loading,State,SolStrat)
    - \[State,SolStrat] = Initialize (Model,ElemData,Loading,State,SolStrat)
    - SolStrat = Initialize_SolStrat
    - State = Initialize_State (Model,ElemData)
    - \[State,SolStrat] = Iterate (Model,ElemData,Loading,State,SolStrat)
    - State = LinearStep (Model,ElemData,Loading)
    - SolStrat = LoadFactorControl (action,SolStrat,detKf,Pref,Ut,DUr)
    - Dlam = LoadFactorIncrement (History,Time,Deltat)
    - \[State,SolStrat] = OneIteration (Model,ElemData,Loading,State,SolStrat)
    - \[State,SolStrat] = OneTransientIteration (Model,ElemData,Loading,State,SolStrat)
    - \[lamdac,Qc,DUf,DVpl] = PlasticAnalysis (Model,ElemData,Loading,LPOpt)
    - State = StateDetermination (StifUpdt,Model,ElemData,State)
    - Int_Constants = TimeIntegrationConstants (TimeStrat,option)
    - \[State,SolStrat] = TransientIncrement(Model,ElemData,Loading,State,SolStrat)
    - State = TransientInitialize (Model,ElemData,Loading,State)
    - \[State,SolStrat] = TransientIterate (Model,ElemData,Loading,State,SolStrat)
    - State = TransientStateDetermination (StifUpdt,Model,ElemData,State,Int_Constants)
    - State = Update_State (Model,ElemData,State)
    - State = Update_TransientState (Model,ElemData,State,SolStrat)
  Utilities:
    - \[DspHst,FrcHst] = Create_DispCyclewN (DspPat,Options)
    - LoadHist = Create_LoadHistory (RevVal,LHCase,T_Rev)
    - \[DspHst,FrcHst] = Create_MultDispCycleswN (DspPat,Ucyc,Ncyc,TmStr,Options)
    - ied = D_index (Model)
    - iced = H_index (Model,ElemData)
    - Print_PDFile (FName,FigOpt,PrOpt)
    Interpolation:
      - hp = Hermite (degree,deriv,xi)
      - hp = HermiteN(nn,deriv,xi)
      - lp = Lagrange (degree,deriv,xi)
      - lp = LagrangeN (nn,deriv,xi)
    Plotting:
      - Animate_EventSequence (Model,ElemData,Ufh,Qh,PlotOpt)
      - Animate_ResponsewHngHist (Model,ElemData,Post,PlotOpt)
      - FigH = Create_Window (dx,dy)
      - Draw_3dAxisCross (Xlim,Ylim,Zlim,PlotOpt)
      - varargout = Draw_Arrow (Astr,Aend,Aln,PlotOpt)
      - Draw_AxisCross (Xlim,Ylim,PlotOpt)
      - Draw_Cube (XYZc,Size,Color)
      - \[Font,lt,ls] = FontProp4PlotSection()
      - \[AxHngCoor,FlHngCoor] = Get_HngPos4DefoElem (XYiod,XYjod,xyd,HngOpt)
      - \[ModSc,maxL,minL] = Get_ModelScale (Model,Ratio)
      - Label_2dMoments (Model,Post,ElemList,Digit,Units)
      - Label_AxialForces (Model,Post,ElemList,Digit,Units)
      - Label_Model (Model,LblOpt)
      - \[Line] = LineProp4PlotSection()
      - Plot_2dCurvDistr (Model,ElemData,Post,ElemList,UserScale)
      - Plot_2dMomntDistr (Model,ElemData,Post,ElemList,UserScale)
      - Plot_AxialForces (Model,Post,ElemList,UserScale)
      - Plot_BounCond (XYZ,BOUN,BsClr,BsSz)
      - Plot_DeformedStructure (Model,ElemData,U,Post,PlotOpt)
      - AxHndl = Plot_DispPath (DspHst,PlotOpt)
      - Plot_ElemLoading (Model,ElemData,PlotOpt)
      - Plot_ForcDistr (Model,ElemData,Post,Component,ElemList,UserScale)
      - Plot_Hinge4Elem (nq,HngId,AxHngCoor,FlHngCoor,Colors)
      - Plot_IPVarDistr (Model,ElemData,Post,Component,ElemList,UserScale)
      - AxHndl = Plot_LoadHistory(DspHst,FrcHst,PlotOpt)
      - Plot_Mesh4Circ (SecData)
      - Plot_Mesh4MultRectShape (SecData)
      - Plot_Model (Model,U,MPlOpt)
      - Plot_NodalForces (Model,Loading,PlotOpt)
      - Plot_OpenPlasticHinges (Model,ElemData,Post,PlotOpt)
      - Plot_PlasticHinges (Model,ElemData,U,Post,PlotOpt)
      - Plot_Releases (Model,ElemData,U,PlotOpt)
      - Plot_SectionGeometry (SecData,PlotOpt)
      - AxHndl = Plot_StoryDistr (Xp,PlotOpt)
      - AxHndl = Plot_XYData (Xp,Yp,PlotOpt)
    PostProcessing:
      - Post = Add_OpenPHIndx2Post (Model,Post)
      - \[Q,Ve] = Complete_QV (Model,ElemData,Qin)
      - HFlrTrans = Get_HFlrTrans ( Model,Frame,Post )
      - RIDrift = Get_RIStDrift ( Model,Frame,Post )
      - StShear = Get_StShear (Model,ElemData,Frame,Post,GravCol)
      - Post = Q2Post (Model,Q)
    PreProcessing:
      - SecProp = AISC_Section (sect)
      - SecData = Add_Bars2Section (SecData,BarAyz,MatName,MatData,CrdOr)
      - Frame = Add_Brace2Frame (Frame,BayNo,BrType,EccR,StrRng,nsBr)
      - Frame = Add_GravityColumn2Frame (Frame)
      - SecData = Add_Shape2Section (SecData,Shape,CrdOr)
      - \[yfib,zfib] = CircLayer2Bar (R,nb,Phi)
      - \[Outline,A,sy,sz] = Create_BoxOutline (Data)
      - \[Outline,A,sy,sz] = Create_BoxwOvhOutline (Data)
      - \[Outline,A,sy,sz] = Create_CSecOutline (Data)
      - FibAyz = Create_CircBarGrid (BarData)
      - Frame = Create_FrameSections (Frame,ColSect,GrdSect)
      - \[yfib,zfib,wfib,MatID] = Create_IPMesh4Circ (SecData)
      - Shape = Create_IPMesh4MultRectShape (Shape,MeshData)
      - \[yfib,zfib,wfib,MatID] = Create_IPMesh4Rect (SecData)
      - \[yfib,zfib,wfib,MatID] = Create_IPMesh4WFShape (SecData)
      - \[Outline,A,sy,sz] = Create_ISecOutline (Data)
      - JntOff = Create_JntOffsets (Frame,DBase)
      - \[Outline,A,sy,sz] = Create_LSecOutline (Data)
      - Pe = Create_Load4Frame (Frame,Pdis,index)
      - \[R1,R2,thfib,dth] = Create_MPMesh4Circ (Ri,Ro,nrfib,nthfib,MeshOpt)
      - Frame = Create_MRFrame (Lbv,Hsv,nsub)
      - Me = Create_Mass4Frame (Frame,Mdis,index)
      - Shape = Create_MultRectShape (SType,Data)
      - FibAyz = Create_RectBarGrid (BarGeomData)
      - \[Outline,A,sy,sz] = Create_RectOutline (Data)
      - yz = Create_RectPatch (ty,tz,sy,sz)
      - Shape = Create_RectShape (ndm,SType,Data)
      - \[Outline,A,sy,sz] = Create_RectwCovOutline (Data)
      - \[Outline,A,sy,sz] = Create_SSecOutline (Data)
      - Shape = Create_ShapewMat (SType,Data)
      - \[Outline,A,sy,sz] = Create_TSecOutline (Data)
      - Qpl = ElemData2Qpl (Model,ElemData)
      - BraceElemData = ElemData4SteelBraces (Frame,Data,DBase,LUnit)
      - \[ColElemData,GrdElemData] = ElemData4SteelFrame (Frame,Data,DBase,LUnit,Member)
      - BraceElemData = FiberElemData4SteelBraces (Frame,Data,DBase,LUnit)
      - \[ColElemData,GrdElemData] = FiberElemData4SteelFrame (Frame,Data,DBase,LUnit,Member)
      - \[yfib,wfib] = MP1dInt4Circ (R,nrfib)
      - \[yfib,zfib,wfib] = MP2dInt4Circ (R,nrfib,nthfib,MeshOpt)
      - \[yfib,zfib,wfib] = Rectangle2Fiber (patcoor,IntTyp,nyfib,nzfib)
    Quadrature:
      - \[xIP,wIP] = Gauss (nIP)
      - \[xIP,wIP] = Lobatto (nIP)
      - \[xIP,wIP] = Midpoint (nIP)
      - \[xIP,wIP] = Simpson (nIP)
      - \[xIP,wIP] = Trap (nIP)

